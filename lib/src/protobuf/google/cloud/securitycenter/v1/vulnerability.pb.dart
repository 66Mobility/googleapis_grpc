//
//  Generated code. Do not modify.
//  source: google/cloud/securitycenter/v1/vulnerability.proto
//
// @dart = 2.12

// ignore_for_file: annotate_overrides, camel_case_types, comment_references
// ignore_for_file: constant_identifier_names, library_prefixes
// ignore_for_file: non_constant_identifier_names, prefer_final_fields
// ignore_for_file: unnecessary_import, unnecessary_this, unused_import

import 'dart:core' as $core;

import 'package:protobuf/protobuf.dart' as $pb;

import '../../../protobuf/timestamp.pb.dart' as $1776;
import 'vulnerability.pbenum.dart';

export 'vulnerability.pbenum.dart';

/// Refers to common vulnerability fields e.g. cve, cvss, cwe etc.
class Vulnerability extends $pb.GeneratedMessage {
  factory Vulnerability({
    Cve? cve,
    Package? offendingPackage,
    Package? fixedPackage,
    SecurityBulletin? securityBulletin,
  }) {
    final $result = create();
    if (cve != null) {
      $result.cve = cve;
    }
    if (offendingPackage != null) {
      $result.offendingPackage = offendingPackage;
    }
    if (fixedPackage != null) {
      $result.fixedPackage = fixedPackage;
    }
    if (securityBulletin != null) {
      $result.securityBulletin = securityBulletin;
    }
    return $result;
  }
  Vulnerability._() : super();
  factory Vulnerability.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory Vulnerability.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'Vulnerability', package: const $pb.PackageName(_omitMessageNames ? '' : 'google.cloud.securitycenter.v1'), createEmptyInstance: create)
    ..aOM<Cve>(1, _omitFieldNames ? '' : 'cve', subBuilder: Cve.create)
    ..aOM<Package>(2, _omitFieldNames ? '' : 'offendingPackage', subBuilder: Package.create)
    ..aOM<Package>(3, _omitFieldNames ? '' : 'fixedPackage', subBuilder: Package.create)
    ..aOM<SecurityBulletin>(4, _omitFieldNames ? '' : 'securityBulletin', subBuilder: SecurityBulletin.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  Vulnerability clone() => Vulnerability()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  Vulnerability copyWith(void Function(Vulnerability) updates) => super.copyWith((message) => updates(message as Vulnerability)) as Vulnerability;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static Vulnerability create() => Vulnerability._();
  Vulnerability createEmptyInstance() => create();
  static $pb.PbList<Vulnerability> createRepeated() => $pb.PbList<Vulnerability>();
  @$core.pragma('dart2js:noInline')
  static Vulnerability getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<Vulnerability>(create);
  static Vulnerability? _defaultInstance;

  /// CVE stands for Common Vulnerabilities and Exposures
  /// (https://cve.mitre.org/about/)
  @$pb.TagNumber(1)
  Cve get cve => $_getN(0);
  @$pb.TagNumber(1)
  set cve(Cve v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasCve() => $_has(0);
  @$pb.TagNumber(1)
  void clearCve() => clearField(1);
  @$pb.TagNumber(1)
  Cve ensureCve() => $_ensure(0);

  /// The offending package is relevant to the finding.
  @$pb.TagNumber(2)
  Package get offendingPackage => $_getN(1);
  @$pb.TagNumber(2)
  set offendingPackage(Package v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasOffendingPackage() => $_has(1);
  @$pb.TagNumber(2)
  void clearOffendingPackage() => clearField(2);
  @$pb.TagNumber(2)
  Package ensureOffendingPackage() => $_ensure(1);

  /// The fixed package is relevant to the finding.
  @$pb.TagNumber(3)
  Package get fixedPackage => $_getN(2);
  @$pb.TagNumber(3)
  set fixedPackage(Package v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasFixedPackage() => $_has(2);
  @$pb.TagNumber(3)
  void clearFixedPackage() => clearField(3);
  @$pb.TagNumber(3)
  Package ensureFixedPackage() => $_ensure(2);

  /// The security bulletin is relevant to this finding.
  @$pb.TagNumber(4)
  SecurityBulletin get securityBulletin => $_getN(3);
  @$pb.TagNumber(4)
  set securityBulletin(SecurityBulletin v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasSecurityBulletin() => $_has(3);
  @$pb.TagNumber(4)
  void clearSecurityBulletin() => clearField(4);
  @$pb.TagNumber(4)
  SecurityBulletin ensureSecurityBulletin() => $_ensure(3);
}

/// CVE stands for Common Vulnerabilities and Exposures.
/// Information from the [CVE
/// record](https://www.cve.org/ResourcesSupport/Glossary) that describes this
/// vulnerability.
class Cve extends $pb.GeneratedMessage {
  factory Cve({
    $core.String? id,
    $core.Iterable<Reference>? references,
    Cvssv3? cvssv3,
    $core.bool? upstreamFixAvailable,
    Cve_RiskRating? impact,
    Cve_ExploitationActivity? exploitationActivity,
    $core.bool? observedInTheWild,
    $core.bool? zeroDay,
    $1776.Timestamp? exploitReleaseDate,
  }) {
    final $result = create();
    if (id != null) {
      $result.id = id;
    }
    if (references != null) {
      $result.references.addAll(references);
    }
    if (cvssv3 != null) {
      $result.cvssv3 = cvssv3;
    }
    if (upstreamFixAvailable != null) {
      $result.upstreamFixAvailable = upstreamFixAvailable;
    }
    if (impact != null) {
      $result.impact = impact;
    }
    if (exploitationActivity != null) {
      $result.exploitationActivity = exploitationActivity;
    }
    if (observedInTheWild != null) {
      $result.observedInTheWild = observedInTheWild;
    }
    if (zeroDay != null) {
      $result.zeroDay = zeroDay;
    }
    if (exploitReleaseDate != null) {
      $result.exploitReleaseDate = exploitReleaseDate;
    }
    return $result;
  }
  Cve._() : super();
  factory Cve.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory Cve.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'Cve', package: const $pb.PackageName(_omitMessageNames ? '' : 'google.cloud.securitycenter.v1'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'id')
    ..pc<Reference>(2, _omitFieldNames ? '' : 'references', $pb.PbFieldType.PM, subBuilder: Reference.create)
    ..aOM<Cvssv3>(3, _omitFieldNames ? '' : 'cvssv3', subBuilder: Cvssv3.create)
    ..aOB(4, _omitFieldNames ? '' : 'upstreamFixAvailable')
    ..e<Cve_RiskRating>(5, _omitFieldNames ? '' : 'impact', $pb.PbFieldType.OE, defaultOrMaker: Cve_RiskRating.RISK_RATING_UNSPECIFIED, valueOf: Cve_RiskRating.valueOf, enumValues: Cve_RiskRating.values)
    ..e<Cve_ExploitationActivity>(6, _omitFieldNames ? '' : 'exploitationActivity', $pb.PbFieldType.OE, defaultOrMaker: Cve_ExploitationActivity.EXPLOITATION_ACTIVITY_UNSPECIFIED, valueOf: Cve_ExploitationActivity.valueOf, enumValues: Cve_ExploitationActivity.values)
    ..aOB(7, _omitFieldNames ? '' : 'observedInTheWild')
    ..aOB(8, _omitFieldNames ? '' : 'zeroDay')
    ..aOM<$1776.Timestamp>(9, _omitFieldNames ? '' : 'exploitReleaseDate', subBuilder: $1776.Timestamp.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  Cve clone() => Cve()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  Cve copyWith(void Function(Cve) updates) => super.copyWith((message) => updates(message as Cve)) as Cve;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static Cve create() => Cve._();
  Cve createEmptyInstance() => create();
  static $pb.PbList<Cve> createRepeated() => $pb.PbList<Cve>();
  @$core.pragma('dart2js:noInline')
  static Cve getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<Cve>(create);
  static Cve? _defaultInstance;

  /// The unique identifier for the vulnerability. e.g. CVE-2021-34527
  @$pb.TagNumber(1)
  $core.String get id => $_getSZ(0);
  @$pb.TagNumber(1)
  set id($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasId() => $_has(0);
  @$pb.TagNumber(1)
  void clearId() => clearField(1);

  /// Additional information about the CVE.
  /// e.g. https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-34527
  @$pb.TagNumber(2)
  $core.List<Reference> get references => $_getList(1);

  /// Describe Common Vulnerability Scoring System specified at
  /// https://www.first.org/cvss/v3.1/specification-document
  @$pb.TagNumber(3)
  Cvssv3 get cvssv3 => $_getN(2);
  @$pb.TagNumber(3)
  set cvssv3(Cvssv3 v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasCvssv3() => $_has(2);
  @$pb.TagNumber(3)
  void clearCvssv3() => clearField(3);
  @$pb.TagNumber(3)
  Cvssv3 ensureCvssv3() => $_ensure(2);

  /// Whether upstream fix is available for the CVE.
  @$pb.TagNumber(4)
  $core.bool get upstreamFixAvailable => $_getBF(3);
  @$pb.TagNumber(4)
  set upstreamFixAvailable($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasUpstreamFixAvailable() => $_has(3);
  @$pb.TagNumber(4)
  void clearUpstreamFixAvailable() => clearField(4);

  /// The potential impact of the vulnerability if it was to be exploited.
  @$pb.TagNumber(5)
  Cve_RiskRating get impact => $_getN(4);
  @$pb.TagNumber(5)
  set impact(Cve_RiskRating v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasImpact() => $_has(4);
  @$pb.TagNumber(5)
  void clearImpact() => clearField(5);

  /// The exploitation activity of the vulnerability in the wild.
  @$pb.TagNumber(6)
  Cve_ExploitationActivity get exploitationActivity => $_getN(5);
  @$pb.TagNumber(6)
  set exploitationActivity(Cve_ExploitationActivity v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasExploitationActivity() => $_has(5);
  @$pb.TagNumber(6)
  void clearExploitationActivity() => clearField(6);

  /// Whether or not the vulnerability has been observed in the wild.
  @$pb.TagNumber(7)
  $core.bool get observedInTheWild => $_getBF(6);
  @$pb.TagNumber(7)
  set observedInTheWild($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(7)
  $core.bool hasObservedInTheWild() => $_has(6);
  @$pb.TagNumber(7)
  void clearObservedInTheWild() => clearField(7);

  /// Whether or not the vulnerability was zero day when the finding was
  /// published.
  @$pb.TagNumber(8)
  $core.bool get zeroDay => $_getBF(7);
  @$pb.TagNumber(8)
  set zeroDay($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(8)
  $core.bool hasZeroDay() => $_has(7);
  @$pb.TagNumber(8)
  void clearZeroDay() => clearField(8);

  /// Date the first publicly available exploit or PoC was released.
  @$pb.TagNumber(9)
  $1776.Timestamp get exploitReleaseDate => $_getN(8);
  @$pb.TagNumber(9)
  set exploitReleaseDate($1776.Timestamp v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasExploitReleaseDate() => $_has(8);
  @$pb.TagNumber(9)
  void clearExploitReleaseDate() => clearField(9);
  @$pb.TagNumber(9)
  $1776.Timestamp ensureExploitReleaseDate() => $_ensure(8);
}

/// Additional Links
class Reference extends $pb.GeneratedMessage {
  factory Reference({
    $core.String? source,
    $core.String? uri,
  }) {
    final $result = create();
    if (source != null) {
      $result.source = source;
    }
    if (uri != null) {
      $result.uri = uri;
    }
    return $result;
  }
  Reference._() : super();
  factory Reference.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory Reference.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'Reference', package: const $pb.PackageName(_omitMessageNames ? '' : 'google.cloud.securitycenter.v1'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'source')
    ..aOS(2, _omitFieldNames ? '' : 'uri')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  Reference clone() => Reference()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  Reference copyWith(void Function(Reference) updates) => super.copyWith((message) => updates(message as Reference)) as Reference;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static Reference create() => Reference._();
  Reference createEmptyInstance() => create();
  static $pb.PbList<Reference> createRepeated() => $pb.PbList<Reference>();
  @$core.pragma('dart2js:noInline')
  static Reference getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<Reference>(create);
  static Reference? _defaultInstance;

  /// Source of the reference e.g. NVD
  @$pb.TagNumber(1)
  $core.String get source => $_getSZ(0);
  @$pb.TagNumber(1)
  set source($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasSource() => $_has(0);
  @$pb.TagNumber(1)
  void clearSource() => clearField(1);

  /// Uri for the mentioned source e.g.
  /// https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-34527.
  @$pb.TagNumber(2)
  $core.String get uri => $_getSZ(1);
  @$pb.TagNumber(2)
  set uri($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasUri() => $_has(1);
  @$pb.TagNumber(2)
  void clearUri() => clearField(2);
}

/// Common Vulnerability Scoring System version 3.
class Cvssv3 extends $pb.GeneratedMessage {
  factory Cvssv3({
    $core.double? baseScore,
    Cvssv3_AttackVector? attackVector,
    Cvssv3_AttackComplexity? attackComplexity,
    Cvssv3_PrivilegesRequired? privilegesRequired,
    Cvssv3_UserInteraction? userInteraction,
    Cvssv3_Scope? scope,
    Cvssv3_Impact? confidentialityImpact,
    Cvssv3_Impact? integrityImpact,
    Cvssv3_Impact? availabilityImpact,
  }) {
    final $result = create();
    if (baseScore != null) {
      $result.baseScore = baseScore;
    }
    if (attackVector != null) {
      $result.attackVector = attackVector;
    }
    if (attackComplexity != null) {
      $result.attackComplexity = attackComplexity;
    }
    if (privilegesRequired != null) {
      $result.privilegesRequired = privilegesRequired;
    }
    if (userInteraction != null) {
      $result.userInteraction = userInteraction;
    }
    if (scope != null) {
      $result.scope = scope;
    }
    if (confidentialityImpact != null) {
      $result.confidentialityImpact = confidentialityImpact;
    }
    if (integrityImpact != null) {
      $result.integrityImpact = integrityImpact;
    }
    if (availabilityImpact != null) {
      $result.availabilityImpact = availabilityImpact;
    }
    return $result;
  }
  Cvssv3._() : super();
  factory Cvssv3.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory Cvssv3.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'Cvssv3', package: const $pb.PackageName(_omitMessageNames ? '' : 'google.cloud.securitycenter.v1'), createEmptyInstance: create)
    ..a<$core.double>(1, _omitFieldNames ? '' : 'baseScore', $pb.PbFieldType.OD)
    ..e<Cvssv3_AttackVector>(5, _omitFieldNames ? '' : 'attackVector', $pb.PbFieldType.OE, defaultOrMaker: Cvssv3_AttackVector.ATTACK_VECTOR_UNSPECIFIED, valueOf: Cvssv3_AttackVector.valueOf, enumValues: Cvssv3_AttackVector.values)
    ..e<Cvssv3_AttackComplexity>(6, _omitFieldNames ? '' : 'attackComplexity', $pb.PbFieldType.OE, defaultOrMaker: Cvssv3_AttackComplexity.ATTACK_COMPLEXITY_UNSPECIFIED, valueOf: Cvssv3_AttackComplexity.valueOf, enumValues: Cvssv3_AttackComplexity.values)
    ..e<Cvssv3_PrivilegesRequired>(7, _omitFieldNames ? '' : 'privilegesRequired', $pb.PbFieldType.OE, defaultOrMaker: Cvssv3_PrivilegesRequired.PRIVILEGES_REQUIRED_UNSPECIFIED, valueOf: Cvssv3_PrivilegesRequired.valueOf, enumValues: Cvssv3_PrivilegesRequired.values)
    ..e<Cvssv3_UserInteraction>(8, _omitFieldNames ? '' : 'userInteraction', $pb.PbFieldType.OE, defaultOrMaker: Cvssv3_UserInteraction.USER_INTERACTION_UNSPECIFIED, valueOf: Cvssv3_UserInteraction.valueOf, enumValues: Cvssv3_UserInteraction.values)
    ..e<Cvssv3_Scope>(9, _omitFieldNames ? '' : 'scope', $pb.PbFieldType.OE, defaultOrMaker: Cvssv3_Scope.SCOPE_UNSPECIFIED, valueOf: Cvssv3_Scope.valueOf, enumValues: Cvssv3_Scope.values)
    ..e<Cvssv3_Impact>(10, _omitFieldNames ? '' : 'confidentialityImpact', $pb.PbFieldType.OE, defaultOrMaker: Cvssv3_Impact.IMPACT_UNSPECIFIED, valueOf: Cvssv3_Impact.valueOf, enumValues: Cvssv3_Impact.values)
    ..e<Cvssv3_Impact>(11, _omitFieldNames ? '' : 'integrityImpact', $pb.PbFieldType.OE, defaultOrMaker: Cvssv3_Impact.IMPACT_UNSPECIFIED, valueOf: Cvssv3_Impact.valueOf, enumValues: Cvssv3_Impact.values)
    ..e<Cvssv3_Impact>(12, _omitFieldNames ? '' : 'availabilityImpact', $pb.PbFieldType.OE, defaultOrMaker: Cvssv3_Impact.IMPACT_UNSPECIFIED, valueOf: Cvssv3_Impact.valueOf, enumValues: Cvssv3_Impact.values)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  Cvssv3 clone() => Cvssv3()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  Cvssv3 copyWith(void Function(Cvssv3) updates) => super.copyWith((message) => updates(message as Cvssv3)) as Cvssv3;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static Cvssv3 create() => Cvssv3._();
  Cvssv3 createEmptyInstance() => create();
  static $pb.PbList<Cvssv3> createRepeated() => $pb.PbList<Cvssv3>();
  @$core.pragma('dart2js:noInline')
  static Cvssv3 getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<Cvssv3>(create);
  static Cvssv3? _defaultInstance;

  /// The base score is a function of the base metric scores.
  @$pb.TagNumber(1)
  $core.double get baseScore => $_getN(0);
  @$pb.TagNumber(1)
  set baseScore($core.double v) { $_setDouble(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasBaseScore() => $_has(0);
  @$pb.TagNumber(1)
  void clearBaseScore() => clearField(1);

  /// Base Metrics
  /// Represents the intrinsic characteristics of a vulnerability that are
  /// constant over time and across user environments.
  /// This metric reflects the context by which vulnerability exploitation is
  /// possible.
  @$pb.TagNumber(5)
  Cvssv3_AttackVector get attackVector => $_getN(1);
  @$pb.TagNumber(5)
  set attackVector(Cvssv3_AttackVector v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasAttackVector() => $_has(1);
  @$pb.TagNumber(5)
  void clearAttackVector() => clearField(5);

  /// This metric describes the conditions beyond the attacker's control that
  /// must exist in order to exploit the vulnerability.
  @$pb.TagNumber(6)
  Cvssv3_AttackComplexity get attackComplexity => $_getN(2);
  @$pb.TagNumber(6)
  set attackComplexity(Cvssv3_AttackComplexity v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasAttackComplexity() => $_has(2);
  @$pb.TagNumber(6)
  void clearAttackComplexity() => clearField(6);

  /// This metric describes the level of privileges an attacker must possess
  /// before successfully exploiting the vulnerability.
  @$pb.TagNumber(7)
  Cvssv3_PrivilegesRequired get privilegesRequired => $_getN(3);
  @$pb.TagNumber(7)
  set privilegesRequired(Cvssv3_PrivilegesRequired v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasPrivilegesRequired() => $_has(3);
  @$pb.TagNumber(7)
  void clearPrivilegesRequired() => clearField(7);

  /// This metric captures the requirement for a human user, other than the
  /// attacker, to participate in the successful compromise of the vulnerable
  /// component.
  @$pb.TagNumber(8)
  Cvssv3_UserInteraction get userInteraction => $_getN(4);
  @$pb.TagNumber(8)
  set userInteraction(Cvssv3_UserInteraction v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasUserInteraction() => $_has(4);
  @$pb.TagNumber(8)
  void clearUserInteraction() => clearField(8);

  /// The Scope metric captures whether a vulnerability in one vulnerable
  /// component impacts resources in components beyond its security scope.
  @$pb.TagNumber(9)
  Cvssv3_Scope get scope => $_getN(5);
  @$pb.TagNumber(9)
  set scope(Cvssv3_Scope v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasScope() => $_has(5);
  @$pb.TagNumber(9)
  void clearScope() => clearField(9);

  /// This metric measures the impact to the confidentiality of the information
  /// resources managed by a software component due to a successfully exploited
  /// vulnerability.
  @$pb.TagNumber(10)
  Cvssv3_Impact get confidentialityImpact => $_getN(6);
  @$pb.TagNumber(10)
  set confidentialityImpact(Cvssv3_Impact v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasConfidentialityImpact() => $_has(6);
  @$pb.TagNumber(10)
  void clearConfidentialityImpact() => clearField(10);

  /// This metric measures the impact to integrity of a successfully exploited
  /// vulnerability.
  @$pb.TagNumber(11)
  Cvssv3_Impact get integrityImpact => $_getN(7);
  @$pb.TagNumber(11)
  set integrityImpact(Cvssv3_Impact v) { setField(11, v); }
  @$pb.TagNumber(11)
  $core.bool hasIntegrityImpact() => $_has(7);
  @$pb.TagNumber(11)
  void clearIntegrityImpact() => clearField(11);

  /// This metric measures the impact to the availability of the impacted
  /// component resulting from a successfully exploited vulnerability.
  @$pb.TagNumber(12)
  Cvssv3_Impact get availabilityImpact => $_getN(8);
  @$pb.TagNumber(12)
  set availabilityImpact(Cvssv3_Impact v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasAvailabilityImpact() => $_has(8);
  @$pb.TagNumber(12)
  void clearAvailabilityImpact() => clearField(12);
}

/// Package is a generic definition of a package.
class Package extends $pb.GeneratedMessage {
  factory Package({
    $core.String? packageName,
    $core.String? cpeUri,
    $core.String? packageType,
    $core.String? packageVersion,
  }) {
    final $result = create();
    if (packageName != null) {
      $result.packageName = packageName;
    }
    if (cpeUri != null) {
      $result.cpeUri = cpeUri;
    }
    if (packageType != null) {
      $result.packageType = packageType;
    }
    if (packageVersion != null) {
      $result.packageVersion = packageVersion;
    }
    return $result;
  }
  Package._() : super();
  factory Package.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory Package.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'Package', package: const $pb.PackageName(_omitMessageNames ? '' : 'google.cloud.securitycenter.v1'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'packageName')
    ..aOS(2, _omitFieldNames ? '' : 'cpeUri')
    ..aOS(3, _omitFieldNames ? '' : 'packageType')
    ..aOS(4, _omitFieldNames ? '' : 'packageVersion')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  Package clone() => Package()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  Package copyWith(void Function(Package) updates) => super.copyWith((message) => updates(message as Package)) as Package;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static Package create() => Package._();
  Package createEmptyInstance() => create();
  static $pb.PbList<Package> createRepeated() => $pb.PbList<Package>();
  @$core.pragma('dart2js:noInline')
  static Package getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<Package>(create);
  static Package? _defaultInstance;

  /// The name of the package where the vulnerability was detected.
  @$pb.TagNumber(1)
  $core.String get packageName => $_getSZ(0);
  @$pb.TagNumber(1)
  set packageName($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasPackageName() => $_has(0);
  @$pb.TagNumber(1)
  void clearPackageName() => clearField(1);

  /// The CPE URI where the vulnerability was detected.
  @$pb.TagNumber(2)
  $core.String get cpeUri => $_getSZ(1);
  @$pb.TagNumber(2)
  set cpeUri($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasCpeUri() => $_has(1);
  @$pb.TagNumber(2)
  void clearCpeUri() => clearField(2);

  /// Type of package, for example, os, maven, or go.
  @$pb.TagNumber(3)
  $core.String get packageType => $_getSZ(2);
  @$pb.TagNumber(3)
  set packageType($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasPackageType() => $_has(2);
  @$pb.TagNumber(3)
  void clearPackageType() => clearField(3);

  /// The version of the package.
  @$pb.TagNumber(4)
  $core.String get packageVersion => $_getSZ(3);
  @$pb.TagNumber(4)
  set packageVersion($core.String v) { $_setString(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasPackageVersion() => $_has(3);
  @$pb.TagNumber(4)
  void clearPackageVersion() => clearField(4);
}

/// SecurityBulletin are notifications of vulnerabilities of Google products.
class SecurityBulletin extends $pb.GeneratedMessage {
  factory SecurityBulletin({
    $core.String? bulletinId,
    $1776.Timestamp? submissionTime,
    $core.String? suggestedUpgradeVersion,
  }) {
    final $result = create();
    if (bulletinId != null) {
      $result.bulletinId = bulletinId;
    }
    if (submissionTime != null) {
      $result.submissionTime = submissionTime;
    }
    if (suggestedUpgradeVersion != null) {
      $result.suggestedUpgradeVersion = suggestedUpgradeVersion;
    }
    return $result;
  }
  SecurityBulletin._() : super();
  factory SecurityBulletin.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory SecurityBulletin.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'SecurityBulletin', package: const $pb.PackageName(_omitMessageNames ? '' : 'google.cloud.securitycenter.v1'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'bulletinId')
    ..aOM<$1776.Timestamp>(2, _omitFieldNames ? '' : 'submissionTime', subBuilder: $1776.Timestamp.create)
    ..aOS(3, _omitFieldNames ? '' : 'suggestedUpgradeVersion')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  SecurityBulletin clone() => SecurityBulletin()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  SecurityBulletin copyWith(void Function(SecurityBulletin) updates) => super.copyWith((message) => updates(message as SecurityBulletin)) as SecurityBulletin;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static SecurityBulletin create() => SecurityBulletin._();
  SecurityBulletin createEmptyInstance() => create();
  static $pb.PbList<SecurityBulletin> createRepeated() => $pb.PbList<SecurityBulletin>();
  @$core.pragma('dart2js:noInline')
  static SecurityBulletin getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<SecurityBulletin>(create);
  static SecurityBulletin? _defaultInstance;

  /// ID of the bulletin corresponding to the vulnerability.
  @$pb.TagNumber(1)
  $core.String get bulletinId => $_getSZ(0);
  @$pb.TagNumber(1)
  set bulletinId($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasBulletinId() => $_has(0);
  @$pb.TagNumber(1)
  void clearBulletinId() => clearField(1);

  /// Submission time of this Security Bulletin.
  @$pb.TagNumber(2)
  $1776.Timestamp get submissionTime => $_getN(1);
  @$pb.TagNumber(2)
  set submissionTime($1776.Timestamp v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasSubmissionTime() => $_has(1);
  @$pb.TagNumber(2)
  void clearSubmissionTime() => clearField(2);
  @$pb.TagNumber(2)
  $1776.Timestamp ensureSubmissionTime() => $_ensure(1);

  /// This represents a version that the cluster receiving this notification
  /// should be upgraded to, based on its current version. For example, 1.15.0
  @$pb.TagNumber(3)
  $core.String get suggestedUpgradeVersion => $_getSZ(2);
  @$pb.TagNumber(3)
  set suggestedUpgradeVersion($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasSuggestedUpgradeVersion() => $_has(2);
  @$pb.TagNumber(3)
  void clearSuggestedUpgradeVersion() => clearField(3);
}


const _omitFieldNames = $core.bool.fromEnvironment('protobuf.omit_field_names');
const _omitMessageNames = $core.bool.fromEnvironment('protobuf.omit_message_names');
